
@{
    ViewData["Title"] = "GetEmployeeSearch";
    var XLabels = Newtonsoft.Json.JsonConvert.SerializeObject(Model.ChartData.Select(p => p.ProjectName).ToList());
    var YValues = Newtonsoft.Json.JsonConvert.SerializeObject(Model.ChartData.Select(p => p.CapacityHours).ToList());
}
@model WorkHourTracker.Model.Entities.EmployeeSearchOutput;
<h2>Employee Search Results</h2>

<a asp-controller="ProjectManager" asp-action="EmployeeSearch">Back to Employee Search</a>

<div class="container">

    <h3>About: @Model.EmployeeUserName</h3>

    <table class="table-striped">
        <tbody>
            <tr>
                <td class="col-sm-3"><b>First Name:</b></td>
                <td class="col-sm-3">@Model.EmployeeFirstName</td>
            </tr>
            <tr>
                <td class="col-sm-6"><b>Last Name:</b></td>
                <td class="col-sm-6">@Model.EmployeeLastName</td>
            </tr>
            <tr>
                <td class="col-sm-6"><b>Assigned Projects:</b></td>
                <td class="col-sm-6">@Model.CsvAssignedProjects</td>
            </tr>
            <tr>
                <td class="col-sm-6"><b>Capacity Per Project:</b></td>
                <td class="col-sm-6">@Model.CapacityPerProject</td>
            </tr>
            <tr>
                <td class="col-sm-6"><b>Total Hours Spent Per Project:</b></td>
                <td class="col-sm-6">@Model.HoursWorkedPerProject</td>
            </tr>
        </tbody>
    </table>
</div>

<div>
    @if (TempData.Peek("IsOverCapacity") != null)
    {
        <p style="color: red">@TempData["IsOverCapacity"].ToString()</p>
    }
</div>

<div class="box-body">

    <div class="chart-container">
        <canvas id="chart" style="width:100%; height:500px"></canvas>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

<script type="text/javascript">
        $(function () {
    var chartName = "chart";
        var ctx = document.getElementById(chartName).getContext('2d');
        var data = {
                labels: @Html.Raw(XLabels),
                datasets: [{
                    label: "Departments Chart",
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)',
                        'rgba(255, 0, 0)',
                        'rgba(0, 255, 0)',
                        'rgba(0, 0, 255)',
                        'rgba(192, 192, 192)',
                        'rgba(255, 255, 0)',
                        'rgba(255, 0, 255)'
                    ],
                    borderWidth: 1,
                    data: @Html.Raw(YValues)
    }]
            };

var options = {
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: true,
                            color: "rgba(255,99,164,0.2)"
                        }
}],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]
                }
            };

       var myChart = new  Chart(ctx, {
                options: options,
                data: data,
                type:'pie'

            });
        });
</script>
